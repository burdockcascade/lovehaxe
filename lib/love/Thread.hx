/*
 * This file was generated by the LOVE2D Haxe bindings generator for Love2D v11.5.
 * Do not modify this file directly.
 * 2024-05-12 18:21:25
 */

package love;

import lua.Table;
import lua.UserData;
import love.Love2D.Object;
import love.Filesystem.FileData;

@:multiReturn
extern class PerformAtomicResult {

	public var ret1:Dynamic;
	// Skipping field ... of type Dynamic.
}

extern class ThreadModule {

	public static function getChannel(name:String):Channel;

	public static function newChannel():Channel;

	@:overload(function (filename:String):Thread {})
	@:overload(function (fileData:FileData):Thread {})
	public static function newThread(codestring:String):Thread;

}

extern class Thread extends Object {

	function getError():String;

	function isRunning():Bool;

	@:overload(function ():Void {})
	function start(arg1:Dynamic, arg2:Dynamic, ...varargs:Dynamic):Void;

	function wait():Void;

}

extern class Channel extends Object {

	function clear():Void;

	@:overload(function ():Dynamic {})
	function demand(timeout:Float):Dynamic;

	function getCount():Float;

	function hasRead(id:Float):Bool;

	function peek():Dynamic;

	function performAtomic(func:Dynamic, arg1:Dynamic, ...varargs:Dynamic):PerformAtomicResult;

	function pop():Dynamic;

	function push(value:Dynamic):Float;

	@:overload(function (value:Dynamic):Bool {})
	function supply(value:Dynamic, timeout:Float):Bool;

}


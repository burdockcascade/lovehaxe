/*
 * This file was generated by the LOVE2D Haxe bindings generator for Love2D v11.4.
 * Do not modify this file directly.
 * 2024-05-06 00:46:03
 */

package love;

import lua.Table;
import love.Love2D.Object;
import love.Filesystem.FileData;

extern class PerformAtomicResult {
	public var ret1:Any;
	// Skipping field ... of type Any.
}

extern class ThreadModule {
	public static function getChannel(name:String):Channel;
	public static function newChannel():Channel;
	public static function newThread(filename:String):Thread;
	public static function newThread(fileData:FileData):Thread;
	public static function newThread(codestring:String):Thread;
}

extern class Thread extends Object {
	public static function getError():String;
	public static function isRunning():Bool;
	public static function start():Void;
	public static function start(arg1:Variant, arg2:Variant, ...varargs:Variant):Void;
	public static function wait():Void;
}

extern class Channel extends Object {
	public static function clear():Void;
	public static function demand():Variant;
	public static function demand(timeout:Float):Variant;
	public static function getCount():Float;
	public static function hasRead(id:Float):Bool;
	public static function peek():Variant;
	public static function performAtomic(func:Function, arg1:Any, ...varargs:Any):PerformAtomicResult;
	public static function pop():Variant;
	public static function push(value:Variant):Float;
	public static function supply(value:Variant):Bool;
	public static function supply(value:Variant, timeout:Float):Bool;
}


/*
 * This file was generated by the LOVE2D Haxe bindings generator for Love2D v11.5.
 * Do not modify this file directly.
 * 2024-05-12 19:31:28
 */

package love;

import lua.Table;
import lua.UserData;
import love.FileSystem.File;
import love.Love2D.Object;
import love.Love2D.Data;

extern class Decoder extends Object {

	function clone():Decoder;

	function decode():SoundData;

	function getBitDepth():Float;

	function getChannelCount():Float;

	function getDuration():Float;

	function getSampleRate():Float;

	function seek(offset:Float):Void;

}

@:native("love.sound")
extern class SoundModule {

	@:overload(function (file:File, buffer:Float):Decoder {})
	public static function newDecoder(filename:String, buffer:Float):Decoder;

	@:overload(function (filename:String):SoundData {})
	@:overload(function (file:File):SoundData {})
	@:overload(function (decoder:Decoder):SoundData {})
	public static function newSoundData(samples:Float, rate:Float, bits:Float, channels:Float):SoundData;

}

extern class SoundData extends Data {

	function getBitDepth():Float;

	function getChannelCount():Float;

	function getDuration():Float;

	@:overload(function (i:Float):Float {})
	function getSample(i:Float, channel:Float):Float;

	function getSampleCount():Float;

	function getSampleRate():Float;

	@:overload(function (i:Float, sample:Float):Void {})
	function setSample(i:Float, channel:Float, sample:Float):Void;

}


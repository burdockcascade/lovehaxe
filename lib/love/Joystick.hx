/*
 * This file was generated by the LOVE2D Haxe bindings generator for Love2D v11.4.
 * Do not modify this file directly.
 * 2024-05-06 00:46:03
 */

package love;

import lua.Table;
import love.Love2D.Object;

extern class Vibration {
	public var left:Float;
	public var right:Float;
}

extern class Joystick extends Object {
	public static function getAxes():Axes;
	public static function getAxis(axis:Float):Float;
	public static function getAxisCount():Float;
	public static function getButtonCount():Float;
	public static function getDeviceInfo():DeviceInfo;
	public static function getGUID():String;
	public static function getGamepadAxis(axis:GamepadAxis):Float;
	public static function getGamepadMapping(axis:GamepadAxis):GamepadMapping;
	public static function getGamepadMapping(button:GamepadButton):GamepadMapping;
	public static function getGamepadMappingString():String;
	public static function getHat(hat:Float):JoystickHat;
	public static function getHatCount():Float;
	public static function getID():ID;
	public static function getName():String;
	public static function getVibration():Vibration;
	public static function isConnected():Bool;
	public static function isDown(buttonN:Float):Bool;
	public static function isGamepad():Bool;
	public static function isGamepadDown(buttonN:GamepadButton):Bool;
	public static function isVibrationSupported():Bool;
	public static function setVibration(left:Float, right:Float):Bool;
	public static function setVibration():Bool;
	public static function setVibration(left:Float, right:Float, duration:Float):Bool;
}

extern class ID {
	public var id:Float;
	public var instanceid:Float;
}

extern class Axes {
	public var axisDir1:Float;
	public var axisDir2:Float;
	public var axisDirN:Float;
}

extern class GamepadMapping {
	public var inputtype:JoystickInputType;
	public var inputindex:Float;
	public var hatdirection:JoystickHat;
}

extern class JoystickModule {
	public static function getGamepadMappingString(guid:String):String;
	public static function getJoystickCount():Float;
	public static function getJoysticks():Table<Dynamic,Dynamic>;
	public static function loadGamepadMappings(filename:String):Void;
	public static function loadGamepadMappings(mappings:String):Void;
	public static function saveGamepadMappings(filename:String):String;
	public static function saveGamepadMappings():String;
	public static function setGamepadMapping(guid:String, button:GamepadButton, inputtype:JoystickInputType, inputindex:Float, hatdir:JoystickHat):Bool;
	public static function setGamepadMapping(guid:String, axis:GamepadAxis, inputtype:JoystickInputType, inputindex:Float, hatdir:JoystickHat):Bool;
}

extern class DeviceInfo {
	public var vendorID:Float;
	public var productID:Float;
	public var productVersion:Float;
}

extern enum GamepadButton {
	A;
	B;
	X;
	Y;
	BACK;
	GUIDE;
	START;
	LEFTSTICK;
	RIGHTSTICK;
	LEFTSHOULDER;
	RIGHTSHOULDER;
	DPUP;
	DPDOWN;
	DPLEFT;
	DPRIGHT;
}

extern enum JoystickHat {
	C;
	D;
	L;
	LD;
	LU;
	R;
	RD;
	RU;
	U;
}

extern enum GamepadAxis {
	LEFTX;
	LEFTY;
	RIGHTX;
	RIGHTY;
	TRIGGERLEFT;
	TRIGGERRIGHT;
}

extern enum JoystickInputType {
	AXIS;
	BUTTON;
	HAT;
}


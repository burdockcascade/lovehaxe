/*
 * This file was generated by the LOVE2D Haxe bindings generator for Love2D v11.5.
 * Do not modify this file directly.
 * 2024-05-12 19:31:28
 */

package love;

import lua.Table;
import lua.UserData;
import love.Love2D.Object;
import love.Love2D.Data;
import love.FileSystem.FileData;
import love.Image.ImageData;

@:native("love.font")
extern class FontModule {

	@:overload(function (imageData:ImageData, glyphs:String, dpiscale:Float):Rasterizer {})
	public static function newBMFontRasterizer(fileName:String, glyphs:String, dpiscale:Float):Rasterizer;

	public static function newGlyphData(rasterizer:Rasterizer, glyph:Float):Void;

	public static function newImageRasterizer(imageData:ImageData, glyphs:String, extraSpacing:Float, dpiscale:Float):Rasterizer;

	@:overload(function (filename:String):Rasterizer {})
	@:overload(function (data:FileData):Rasterizer {})
	@:overload(function (size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer {})
	@:overload(function (fileName:String, size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer {})
	@:overload(function (fileData:FileData, size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer {})
	@:overload(function (imageData:ImageData, glyphs:String, dpiscale:Float):Rasterizer {})
	public static function newRasterizer(fileName:String, glyphs:String, dpiscale:Float):Rasterizer;

	@:overload(function (size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer {})
	@:overload(function (fileName:String, size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer {})
	public static function newTrueTypeRasterizer(fileData:FileData, size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer;

}

@:multiReturn
extern class GlyphDataDimensions {

	public var width:Float;
	public var height:Float;
}

extern class GlyphData extends Data {

	function getAdvance():Float;

	function getBearing():GlyphDataBearing;

	function getBoundingBox():GlyphDataBoundingBox;

	function getDimensions():GlyphDataDimensions;

	function getFormat():Dynamic;

	function getGlyph():Float;

	function getGlyphString():String;

	function getHeight():Float;

	function getWidth():Float;

}

@:multiReturn
extern class GlyphDataBoundingBox {

	public var x:Float;
	public var y:Float;
	public var width:Float;
	public var height:Float;
}

extern class Rasterizer extends Object {

	function getAdvance():Float;

	function getAscent():Float;

	function getDescent():Float;

	function getGlyphCount():Float;

	@:overload(function (glyph:String):GlyphData {})
	function getGlyphData(glyphNumber:Float):GlyphData;

	function getHeight():Float;

	function getLineHeight():Float;

	function hasGlyphs(glyph1:Dynamic, glyph2:Dynamic, ...varargs:Dynamic):Bool;

}

@:multiReturn
extern class GlyphDataBearing {

	public var bx:Float;
	public var by:Float;
}

extern enum HintingMode {
	NORMAL;
	LIGHT;
	MONO;
	NONE;
}


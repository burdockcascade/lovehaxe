/*
 * This file was generated by the LOVE2D Haxe bindings generator for Love2D v11.4.
 * Do not modify this file directly.
 * 2024-05-06 00:46:03
 */

package love;

import lua.Table;
import love.Love2D.Object;
import love.Love2D.Data;
import love.Filesystem.FileData;
import love.Image.ImageData;

extern class Dimensions {
	public var width:Float;
	public var height:Float;
}

extern class FontModule {
	public static function newBMFontRasterizer(imageData:ImageData, glyphs:String, dpiscale:Float):Rasterizer;
	public static function newBMFontRasterizer(fileName:String, glyphs:String, dpiscale:Float):Rasterizer;
	public static function newGlyphData(rasterizer:Rasterizer, glyph:Float):Void;
	public static function newImageRasterizer(imageData:ImageData, glyphs:String, extraSpacing:Float, dpiscale:Float):Rasterizer;
	public static function newRasterizer(filename:String):Rasterizer;
	public static function newRasterizer(data:FileData):Rasterizer;
	public static function newRasterizer(size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer;
	public static function newRasterizer(fileName:String, size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer;
	public static function newRasterizer(fileData:FileData, size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer;
	public static function newRasterizer(imageData:ImageData, glyphs:String, dpiscale:Float):Rasterizer;
	public static function newRasterizer(fileName:String, glyphs:String, dpiscale:Float):Rasterizer;
	public static function newTrueTypeRasterizer(size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer;
	public static function newTrueTypeRasterizer(fileName:String, size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer;
	public static function newTrueTypeRasterizer(fileData:FileData, size:Float, hinting:HintingMode, dpiscale:Float):Rasterizer;
}

extern class GlyphData extends Data {
	public static function getAdvance():Float;
	public static function getBearing():Bearing;
	public static function getBoundingBox():BoundingBox;
	public static function getDimensions():Dimensions;
	public static function getFormat():PixelFormat;
	public static function getGlyph():Float;
	public static function getGlyphString():String;
	public static function getHeight():Float;
	public static function getWidth():Float;
}

extern class Rasterizer extends Object {
	public static function getAdvance():Float;
	public static function getAscent():Float;
	public static function getDescent():Float;
	public static function getGlyphCount():Float;
	public static function getGlyphData(glyph:String):GlyphData;
	public static function getGlyphData(glyphNumber:Float):GlyphData;
	public static function getHeight():Float;
	public static function getLineHeight():Float;
	public static function hasGlyphs(glyph1:String or number, glyph2:String or number, ...varargs:String or number):Bool;
}

extern class BoundingBox {
	public var x:Float;
	public var y:Float;
	public var width:Float;
	public var height:Float;
}

extern class Bearing {
	public var bx:Float;
	public var by:Float;
}

extern enum HintingMode {
	NORMAL;
	LIGHT;
	MONO;
	NONE;
}


// DO NOT EDIT THIS FILE
// GENERATED ON 2024-05-04 00:04:23

package love.sound;

import haxe.extern.Rest;
import lua.Table;
import lua.UserData;

@:native("love.sound")
extern class Sound {

	@:overload
	public static function newDecoder(file:Dynamic, buffer:Float = Dynamic): Dynamic;

	@:overload
	public static function newDecoder(filename:String, buffer:Float = Dynamic): Dynamic;

	@:overload
	public static function newSoundData(filename:String): Dynamic;

	@:overload
	public static function newSoundData(file:Dynamic): Dynamic;

	@:overload
	public static function newSoundData(decoder:Dynamic): Dynamic;

	@:overload
	public static function newSoundData(samples:Float, rate:Float = Dynamic, bits:Float = Dynamic, channels:Float = Dynamic): Dynamic;

}

extern class Decoder extends Object {

	public static function clone(): Dynamic;

	public static function decode(): Dynamic;

	public static function getBitDepth(): Float;

	public static function getChannelCount(): Float;

	public static function getDuration(): Float;

	public static function getSampleRate(): Float;

	public static function seek(offset:Float): Void;

}

extern class SoundData extends Data {

	public static function getBitDepth(): Float;

	public static function getChannelCount(): Float;

	public static function getDuration(): Float;

	@:overload
	public static function getSample(i:Float): Float;

	@:overload
	public static function getSample(i:Float, channel:Float): Float;

	public static function getSampleCount(): Float;

	public static function getSampleRate(): Float;

	@:overload
	public static function setSample(i:Float, sample:Float): Void;

	@:overload
	public static function setSample(i:Float, channel:Float, sample:Float): Void;

}


// DO NOT EDIT THIS FILE
// GENERATED ON 2024-05-04 09:34:57

package love;

import lua.Table;
@:native("love.joystick")
extern class Joystick {

	public static function getGamepadMappingString(guid:String): String;

	public static function getJoystickCount(): Float;

	public static function getJoysticks(): Table<Dynamic,Dynamic>;

	@:overload
	public static function loadGamepadMappings(filename:String): Void;

	@:overload
	public static function loadGamepadMappings(mappings:String): Void;

	@:overload
	public static function saveGamepadMappings(filename:String): String;

	@:overload
	public static function saveGamepadMappings(): String;

	@:overload
	public static function setGamepadMapping(guid:String, button:GamepadButton, inputtype:JoystickInputType, inputindex:Float, hatdir:JoystickHat = nil): Bool;

	@:overload
	public static function setGamepadMapping(guid:String, axis:GamepadAxis, inputtype:JoystickInputType, inputindex:Float, hatdir:JoystickHat = nil): Bool;

}

extern class Joystick extends Object {

	public static function getAxes(): Axes;

	public static function getAxis(axis:Float): Float;

	public static function getAxisCount(): Float;

	public static function getButtonCount(): Float;

	public static function getDeviceInfo(): DeviceInfo;

	public static function getGUID(): String;

	public static function getGamepadAxis(axis:GamepadAxis): Float;

	@:overload
	public static function getGamepadMapping(axis:GamepadAxis): GamepadMapping;

	@:overload
	public static function getGamepadMapping(button:GamepadButton): GamepadMapping;

	public static function getGamepadMappingString(): String;

	public static function getHat(hat:Float): JoystickHat;

	public static function getHatCount(): Float;

	public static function getID(): ID;

	public static function getName(): String;

	public static function getVibration(): Vibration;

	public static function isConnected(): Bool;

	public static function isDown(buttonN:Float): Bool;

	public static function isGamepad(): Bool;

	public static function isGamepadDown(buttonN:GamepadButton): Bool;

	public static function isVibrationSupported(): Bool;

	@:overload
	public static function setVibration(left:Float, right:Float): Bool;

	@:overload
	public static function setVibration(): Bool;

	@:overload
	public static function setVibration(left:Float, right:Float, duration:Float = -1): Bool;

}

enum GamepadAxis {
	Leftx;
	Lefty;
	Rightx;
	Righty;
	Triggerleft;
	Triggerright;
}

enum GamepadButton {
	A;
	B;
	X;
	Y;
	Back;
	Guide;
	Start;
	Leftstick;
	Rightstick;
	Leftshoulder;
	Rightshoulder;
	Dpup;
	Dpdown;
	Dpleft;
	Dpright;
}

enum JoystickHat {
	C;
	D;
	L;
	Ld;
	Lu;
	R;
	Rd;
	Ru;
	U;
}

enum JoystickInputType {
	Axis;
	Button;
	Hat;
}


// DO NOT EDIT THIS FILE
// GENERATED ON 2024-05-04 09:34:57

package love;

import lua.Table;
@:native("love.font")
extern class Font {

	@:overload
	public static function newBMFontRasterizer(imageData:ImageData, glyphs:String, dpiscale:Float = 1): Rasterizer;

	@:overload
	public static function newBMFontRasterizer(fileName:String, glyphs:String, dpiscale:Float = 1): Rasterizer;

	public static function newGlyphData(rasterizer:Rasterizer, glyph:Float): Void;

	public static function newImageRasterizer(imageData:ImageData, glyphs:String, extraSpacing:Float = 0, dpiscale:Float = 1): Rasterizer;

	@:overload
	public static function newRasterizer(filename:String): Rasterizer;

	@:overload
	public static function newRasterizer(data:FileData): Rasterizer;

	@:overload
	public static function newRasterizer(size:Float = 12, hinting:HintingMode = 'normal', dpiscale:Float = love.window.getDPIScale()): Rasterizer;

	@:overload
	public static function newRasterizer(fileName:String, size:Float = 12, hinting:HintingMode = 'normal', dpiscale:Float = love.window.getDPIScale()): Rasterizer;

	@:overload
	public static function newRasterizer(fileData:FileData, size:Float = 12, hinting:HintingMode = 'normal', dpiscale:Float = love.window.getDPIScale()): Rasterizer;

	@:overload
	public static function newRasterizer(imageData:ImageData, glyphs:String, dpiscale:Float = 1): Rasterizer;

	@:overload
	public static function newRasterizer(fileName:String, glyphs:String, dpiscale:Float = 1): Rasterizer;

	@:overload
	public static function newTrueTypeRasterizer(size:Float = 12, hinting:HintingMode = 'normal', dpiscale:Float = love.window.getDPIScale()): Rasterizer;

	@:overload
	public static function newTrueTypeRasterizer(fileName:String, size:Float = 12, hinting:HintingMode = 'normal', dpiscale:Float = love.window.getDPIScale()): Rasterizer;

	@:overload
	public static function newTrueTypeRasterizer(fileData:FileData, size:Float = 12, hinting:HintingMode = 'normal', dpiscale:Float = love.window.getDPIScale()): Rasterizer;

}

extern class GlyphData extends Data {

	public static function getAdvance(): Float;

	public static function getBearing(): Bearing;

	public static function getBoundingBox(): BoundingBox;

	public static function getDimensions(): Dimensions;

	public static function getFormat(): PixelFormat;

	public static function getGlyph(): Float;

	public static function getGlyphString(): String;

	public static function getHeight(): Float;

	public static function getWidth(): Float;

}

extern class Rasterizer extends Object {

	public static function getAdvance(): Float;

	public static function getAscent(): Float;

	public static function getDescent(): Float;

	public static function getGlyphCount(): Float;

	@:overload
	public static function getGlyphData(glyph:String): GlyphData;

	@:overload
	public static function getGlyphData(glyphNumber:Float): GlyphData;

	public static function getHeight(): Float;

	public static function getLineHeight(): Float;

	public static function hasGlyphs(glyph1:String or number, glyph2:String or number, ...:String or number): Bool;

}

enum HintingMode {
	Normal;
	Light;
	Mono;
	None;
}

